//Settings
//...............................................................................

TRAIN ="train/";
VALIDATE="validate/";
TEST ="test/";


nTrain =4;
nValidate =5;
nTest = 3;

retainTrain=0;
retainValidate=0;
capGen=0;


tW=400;


cropScaleW = 1200
cropScaleH = 1200;

saveScaleW = 200;
saveScaleH = 200;

imgUp = 1.2; // Upscale Images


crx= (cropScaleW-tW)/2;
cry= (cropScaleH-tW)/2;


scaleNoi = 0;
pasteNoi =1;
blurNoi = 1;
rotateNoi=1;

FitMethod = "Avg";



// Directory
//...............................................................................


PopLocal = getDirectory("plugins") + "2 CamoReq/PopLocation.txt";
PopLocation = File.openAsString(PopLocal);
PopLocation=split(PopLocation, "\n");
PopLocation = PopLocation[0];
PopLocation = PopLocation;


ModuleLocation = File.getParent(PopLocation);
ConLocation = ModuleLocation + "/CON_Data/";

ImgF = ConLocation + "Fitness.txt";
ImgN = ConLocation + "Labels.txt";
CNN = ConLocation + "CNN_Model";

CNN1 = ConLocation + "CNN_model_gabor1";
CNN2 = ConLocation + "CNN_Model2";


if(File.exists(ImgN)) File.delete(ImgN);






// Generations
//...............................................................................


CheckDirectory = PopLocation;
GeneratArray = newArray();
GeneratList  =  getFileList(CheckDirectory);




for(i=0; i<GeneratList.length; i++) { // list all .txt files
	if(endsWith(GeneratList[i], "_ranks.txt")==1)
		GeneratArray = Array.concat(GeneratArray, GeneratList[i]);
}

ArrayLeng = lengthOf(GeneratArray);

csv = ".txt";
tif = ".tif";
txt = ".txt";
png = ".png";

GenNumber = ArrayLeng;
GenNum = CheckDirectory + "gen_" + GenNumber + "_genes" + txt;
GenName = "gen_" + GenNumber  + "_genes" +  txt;
SurvGenNum = CheckDirectory + "gen_" + GenNumber +"_ranks" + txt;


GenStr = File.openAsString(GenNum);
GenArr = split(GenStr, "\n");
GenRand = newArray(GenArr.length);


patDIR =CheckDirectory+"GenPat_"+GenNumber+"/";

if(File.exists(CNN)&&GenNumber==0) File.delete(CNN);
if(File.exists(CNN1)&&GenNumber==0) File.delete(CNN1);
if(File.exists(CNN2)&&GenNumber==0) File.delete(CNN2);






// Clear and Setup
//...............................................................................

if(GenNumber==0){retainTrain=0; retainValidate=0;}


repS=1;

DirectoryArray=newArray();

for(i=0;i<nTrain;i++) DirectoryArray=Array.concat(DirectoryArray,TRAIN);

for(i=0;i<nValidate;i++) DirectoryArray=Array.concat(DirectoryArray,VALIDATE);

for(i=0;i<nTest;i++) DirectoryArray=Array.concat(DirectoryArray,TEST);


CategoryArray = newArray("targets/","blanks/");


if(capGen!=0) deleteGen = GenNumber + capGen;



for(i=0;i<DirectoryArray.length;i++){

	d= ConLocation+DirectoryArray[i];

	if(!File.exists(d)) File.makeDirectory(d);

	gate=1;
	
	if(retainTrain==1 && DirectoryArray[i]==TRAIN) gate=0;
	
	if(retainValidate==1 && DirectoryArray[i]==VALIDATE) gate=0;
	
	if(gate==1){

	if(File.exists(d+CategoryArray[0])){

		flist = getFileList(d+CategoryArray[0]);

			for(j=0;j<flist.length;j++){
			
			
			File.delete(d+CategoryArray[0]+flist[j]);
			

	}}


	if(File.exists(d+CategoryArray[1])){

		flist = getFileList(d+CategoryArray[1]);

			for(j=0;j<flist.length;j++){
			
			File.delete(d+CategoryArray[1]+flist[j]);

	}}

	}
	
	
	if(capGen!=0){
	
		if(File.exists(d+CategoryArray[0])){

		flist = getFileList(d+CategoryArray[0]);

			if(deleteGen>=0){

			for(j=0;j<flist.length;j++){
			
			for(n=0;n<=deleteGen;n++){
			del = n;
			
			if(startsWith(flist[j],"Gen"+del )) File.delete(d+CategoryArray[0]+flist[j]);
			if(startsWith(flist[j],"Train" )) File.delete(d+CategoryArray[0]+flist[j]);
			}
			}

	}}


	if(File.exists(d+CategoryArray[1])){

		flist = getFileList(d+CategoryArray[1]);

			if(deleteGen>=0){
			for(j=0;j<flist.length;j++){
			
			for(n=0;n<=deleteGen;n++){
			del = n;
			
			if(startsWith(flist[j],"Gen"+del )) File.delete(d+CategoryArray[1]+flist[j]);
			if(startsWith(flist[j],"Train" ))  File.delete(d+CategoryArray[1]+flist[j]);
			}
			}
	}}
	
	
	}
	


	if(!File.exists(d+CategoryArray[0])) File.makeDirectory(d+CategoryArray[0]);
	if(!File.exists(d+CategoryArray[1])) File.makeDirectory(d+CategoryArray[1]);

}




// Clear
//...............................................................................

close("*");

setBatchMode(true);
//setBatchMode(false);

while(roiManager("count")>0){
roiManager("Select", Array.getSequence(roiManager("count")));
roiManager("delete");
}





if(!File.exists(ImgF)){


// Backgrounds
//...............................................................................


BgDirectory = CheckDirectory+"Backgrounds/";
TrDirectory = CheckDirectory+"Training/";
TrainBG = CheckDirectory+"Backgrounds_Train/";

File.openSequence(BgDirectory);

run("RGB Color");




	sc2H=getHeight()*imgUp;
	sc2W=getWidth()*imgUp;
	n=nSlices;
	run("Size...", "width=&sc2W height=&sc2H depth=&n constrain average interpolation=None");

bgW = getWidth();
bgH = getHeight();
bgS = nSlices();





if(File.exists(TrainBG)){

File.openSequence(TrainBG);

run("RGB Color");

	sc2H=getHeight()*imgUp;
	sc2W=getWidth()*imgUp;
	run("Size...", "width=&sc2W height=&sc2H depth=&n constrain average interpolation=None");

bgtW = getWidth();
bgtH = getHeight();
bgtS = nSlices();



}





// Target ROI
//...............................................................................

t = split(GenArr[1], "\t");
open(patDIR+t[0]+".tif");
run("Select None");
tW=getWidth();
run("32-bit");
setThreshold(1,255);
run("Create Selection");
roiManager("Add");
close();




idArray=newArray((GenArr.length-1)*repS);
imgArray=newArray((GenArr.length-1)*repS);




// Create Replicates of Targets
//...............................................................................

c=0;


GenRand[0] = "ID"+"\t"+"Fitness";
for(j=1;j<GenRand.length;j++){
t = split(GenArr[j], "\t");

open(patDIR+t[0]+".tif");



run("Select All");
run("Copy");



setPasteMode("Transparent-zero");
close();





for(d =0;d<DirectoryArray.length;d++){

	//Random Crop Backgrounds
	//~~~~~~~~~~~~~~~~~~~~~~~~~
	
	
	W=bgW;
	H=bgH;
	S=bgS;
	

	selectImage("Backgrounds");
	
	if(File.exists(TrainBG) && DirectoryArray[d]!=TEST){
	if(random()<0.5){
	selectImage("Backgrounds_Train");
	W=bgtW;
	H=bgtH;
	S=bgtS;
	}
	}
	
	if(scaleNoi==1){
	crx= (cropScaleW-tW)/2;
	cry= (cropScaleH-tW)/2;
	}
	
	
	/*
	if(File.exists(TrainBG) && DirectoryArray[d]==VALIDATE){
	if(random()<0.5){
	selectImage("Backgrounds_Train");
	W=bgtW;
	H=bgtH;
	S=bgtS;
	}
	}
	*/

	r=1+(random()*S);
	setSlice(r);
	x=random()*(W-cropScaleW);
	y=random()*(H-cropScaleH);


	makeRectangle(x,y,cropScaleW,cropScaleH);
	if(scaleNoi==1 && DirectoryArray[d] != TEST){
	noi=(random("gaussian")*(cropScaleH/10));
	scW=cropScaleW+noi;
	scH=cropScaleH+noi;
	
	x=random()*(W-scW);
	y=random()*(H-scH);
	
	makeRectangle(x,y,scW,scH);
	
	crx= (scW-tW)/2;
	cry= (scH-tW)/2;
	}
	
	


	
	run("Duplicate...", "title=Crop");
	

	
	run("Select None");
	
	run("Duplicate...", " ");

	rNOI=random()*20;
	run("Add Specified Noise...", "standard=rNOI");
	if(blurNoi==1){ r= random()*3; run("Gaussian Blur...", "sigma=r");};
	run("Size...", "width=&saveScaleW height=&saveScaleH depth=1 constrain average interpolation=None");
	
			if(rotateNoi==1&& DirectoryArray[d] != TEST){
			r=random(); 
			if(r>0.5 && r<0.75) run("Rotate 90 Degrees Right");
			if(r>0.25 && r<0.75) run("Rotate 90 Degrees Right");
			if(r<0.75) run("Rotate 90 Degrees Right");
			r=random();
			if(r<0.5) run("Flip Horizontally");
			}
			
	
	saveAs("Jpeg",  ConLocation+DirectoryArray[d]+CategoryArray[1]+"1_"+t[0]+"-"+d+".jpg");
	
	close();
	
	selectImage("Crop");
	
	makeRectangle(crx,cry,tW,tW);
	if(DirectoryArray[d] != TEST && pasteNoi == 1){
	nx=crx+(random("gaussian")*(crx/6))*imgUp;
	ny=cry+(random("gaussian")*(crx/6))*imgUp;
	if(nx<0)nx=0;
	if(nx+tW>getWidth())nx=getWidth()-tW;
	if(ny<0)ny=0;
	if(ny+tW>getHeight())ny=getHeight-tW;
	makeRectangle(nx,ny,tW,tW);
	}
	

	run("Paste");

	run("Select None");
	
	rNOI=random()*20;

	if(blurNoi==1 && DirectoryArray[d] != TEST){
	run("Add Specified Noise...", "standard=rNOI");	r= random()*3; run("Gaussian Blur...", "sigma=r");;
	}
	

	
	run("Size...", "width=&saveScaleW height=&saveScaleH depth=1 constrain average interpolation=None");
	
	
			if(rotateNoi==1&& DirectoryArray[d] != TEST){
			r=random(); 
			if(r>0.5 && r<0.75) run("Rotate 90 Degrees Right");
			if(r>0.25 && r<0.75) run("Rotate 90 Degrees Right");
			if(r<0.75) run("Rotate 90 Degrees Right");
			r=random();
			if(r<0.5) run("Flip Horizontally");
			}
	
	
	saveAs("Jpeg",  ConLocation+DirectoryArray[d]+CategoryArray[0]+t[0]+"-"+d+".jpg");
	close();

	

	if(DirectoryArray[d]==DirectoryArray[DirectoryArray.length-1]){
	ttl=toString(j)+"-"+d-1+".jpg";

	idArray[c] = t[0];
	imgArray[c] = ttl;
	
	c+=1;
	}


}




}//(target loop)



// Create Training Targets if Any
//...............................................................................

if(File.exists(TrDirectory)){

trainList = getFileList(TrDirectory);

for(j=0;j<trainList.length;j++){

open(TrDirectory+trainList[j]);

run("Select All");
run("Copy");


setPasteMode("Transparent-zero");
close();

//Array.show(DirectoryArray);

for(d =0;d<DirectoryArray.length;d++){

if(DirectoryArray[d] != TEST){

	//Random Crop Backgrounds
	//~~~~~~~~~~~~~~~~~~~~~~~~~
	
	
	W=bgW;
	H=bgH;
	S=bgS;
	

	selectImage("Backgrounds");
	
	if(File.exists(TrainBG) && DirectoryArray[d]!=TEST){
	if(random()<0.5){
	selectImage("Backgrounds_Train");
	W=bgtW;
	H=bgtH;
	S=bgtS;
	}
	}
	
	/*
	if(File.exists(TrainBG) && DirectoryArray[d]==VALIDATE){
	if(random()<0.5){
	selectImage("Backgrounds_Train");
	W=bgtW;
	H=bgtH;
	S=bgtS;
	}
	}
	*/ 

	if(scaleNoi==1){
	crx= (cropScaleW-saveScaleW)/2;
	cry= (cropScaleH-saveScaleH)/2;
	}
	


	r=1+(random()*S);
	setSlice(r);
	x=random()*(W-cropScaleW);
	y=random()*(H-cropScaleH);

	makeRectangle(x,y,cropScaleW,cropScaleH);
	if(scaleNoi==1 && DirectoryArray[d] != TEST){

	noi=(random("gaussian")*(cropScaleH/10));
	scW=cropScaleW+noi;
	scH=cropScaleH+noi;
	
	x=random()*(W-scW);
	y=random()*(H-scH);
	
	makeRectangle(x,y,scW,scH);
	
	crx= (scW-saveScaleW)/2;
	cry= (scH-saveScaleH)/2;
	}
	
	run("Duplicate...", "title=Crop");
	
	
	
	run("Select None");
	
	run("Duplicate...", " ");
	
	rNOI=random()*20;
	run("Add Specified Noise...", "standard=rNOI");
	if(blurNoi==1){ r= random()*3; run("Gaussian Blur...", "sigma=r");}
	
	run("Size...", "width=&saveScaleW height=&saveScaleH depth=1 constrain average interpolation=None");
	
	
			if(rotateNoi==1&& DirectoryArray[d] != TEST){
			r=random(); 
			if(r>0.5 && r<0.75) run("Rotate 90 Degrees Right");
			if(r>0.25 && r<0.75) run("Rotate 90 Degrees Right");
			if(r<0.75) run("Rotate 90 Degrees Right");
			r=random();
			if(r<0.5) run("Flip Horizontally");
			}
	
	saveAs("Jpeg",  ConLocation+DirectoryArray[d]+CategoryArray[1]+"1_"+trainList[j]+"-"+d+".jpg");

	close();


	selectImage("Crop");
	

	makeRectangle(crx,cry,tW,tW);
	if(DirectoryArray[d] != TEST && pasteNoi == 1){
	nx=crx+(random("gaussian")*(crx/6))*imgUp;
	ny=cry+(random("gaussian")*(cry/6))*imgUp;
	if(nx<0)nx=0;
	if(nx+tW>getWidth())nx=getWidth()-tW;
	if(ny<0)ny=0;
	if(ny+tW>getHeight())ny=getHeight-tW;
	makeRectangle(nx,ny,tW,tW);
	}
	
	run("Paste");
	
	run("Select None");
	rNOI=random()*20;
	run("Add Specified Noise...", "standard=rNOI");
	if(blurNoi==1){ r= random()*3; run("Gaussian Blur...", "sigma=r");};
	
	run("Select None");
	run("Size...", "width=&saveScaleW height=&saveScaleH depth=1 constrain average interpolation=None");
	
	
			if(rotateNoi==1&& DirectoryArray[d] != TEST){
			r=random(); 
			if(r>0.5 && r<0.75) run("Rotate 90 Degrees Right");
			if(r>0.25 && r<0.75) run("Rotate 90 Degrees Right");
			if(r<0.75) run("Rotate 90 Degrees Right");
			r=random();
			if(r<0.5) run("Flip Horizontally");
			}
	
	saveAs("Jpeg",  ConLocation+DirectoryArray[d]+CategoryArray[0]+trainList[j]+"-"+d+".jpg");
	close();


}
}
}

}




pasteArray=newArray(imgArray.length);
for(i=0;i<pasteArray.length;i++){
pasteArray[i] = imgArray[i]+"\t"+idArray[i];
}


titleArray=newArray("Img","ID");
pasteArray=Array.concat(String.join(titleArray,"\t"),pasteArray);




	dataFile = File.open(ImgN);
	for(i=0;i<pasteArray.length;i++){
		print(dataFile, pasteArray[i]);
	}		
	File.close(dataFile);
	
	
	print("DONE");
	
	
	
//CONVOLUTION Fitness
//.....................................................	
	
if(GenNumber==0 || !File.exists(CNN1)){
path ="C:/Users/Localadmin_hangeorg/Documents/CamoEvo_CNN/TENSORFLOW_CamoEvo/CamoEvoCON/python/3.7_LAB_Model/BAT_CNN_LAB_Primer.bat";

ANACONDA = "C://ANACONDA/Scripts/activate bat";
exec("cmd", "/c", "start", ANACONDA,path);

}

if(GenNumber==0){
while(!File.exists(CNN1)){
print("Saved CNN");
}
}

	path ="C:/Users/Localadmin_hangeorg/Documents/CamoEvo_CNN/TENSORFLOW_CamoEvo/CamoEvoCON/python/3.7_LAB_Model/BAT_CNN_LAB_Fitness.bat";


	ANACONDA = "C://ANACONDA/Scripts/activate bat";
	exec("cmd", "/c", "start", ANACONDA,path);
	


while(!File.exists(ImgF)){
wait(1000);
}
}//If Fintess Doesn't Exist



//Convert Fitness Values
//.....................................................	
	




FitSTR = File.openAsString(ImgF);

FitARR = split(FitSTR,"\n");

FitARR=Array.deleteIndex(FitARR,0);

newFitArr = newArray(((FitARR.length)/nTest));


for(i=0;i<FitARR.length;i++){
t = split(FitARR[i],"\t");
n = split(t[0],"-");
t[0] = n[0];
s = String.join(t,"\t");
FitARR[i] = s;
}


for(i=0;i<newFitArr.length;i++){
if(FitMethod=="Avg") f=0;
if(FitMethod=="Min") f=10000;

	for(j=0;j<nTest;j++){
	t = split(FitARR[(i*nTest)+j],"\t");
	n = t[0];
	
	if(FitMethod=="Avg") f=f+parseFloat(t[1])/nTest; 
	
	if(FitMethod=="Min" && parseFloat(t[1])<f) f = parseFloat(t[1]);
	
	}
	
	tmp=newArray(n,f);
newFitArr[i] = String.join(tmp,"\t");
}




newFitArr=Array.concat("ID"+"\t"+"fitness",newFitArr);


//Array.show(FitARR);


	dataFile = File.open(SurvGenNum);
	for(i=0;i<newFitArr.length;i++){
		print(dataFile, newFitArr[i]);
	}		
	File.close(dataFile);
	
	
	print("DONE");
	



if(File.exists(ImgF)) File.delete(ImgF);

